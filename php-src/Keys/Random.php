<?php

namespace kalanis\UploadPerPartes\Keys;


use kalanis\UploadPerPartes\Uploader\TargetSearch;


/**
 * Class Random
 * @package kalanis\UploadPerPartes\Keys
 * Connect shared key and local which has been generated by as random string
 */
class Random extends AKey
{
    /** @var int */
    protected $keyLength = 64;

    /** @var string[] */
    public static $possibilities = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];

    public function fromSharedKey(string $key): string
    {
        return $key . TargetSearch::FILE_DRIVER_SUFF;
    }

    /**
     * @return AKey
     * @codeCoverageIgnore are you really want to check random key generator?
     */
    public function generateKeys(): parent
    {
        $this->sharedKey = $this->generateRandomText($this->keyLength, static::$possibilities);
        return $this;
    }

    /**
     * @param int $length
     * @param string[] $possibilities
     * @return string
     */
    public static function generateRandomText(int $length, array $possibilities): string
    {
        $string = '';
        for ($i = 0; $i < $length; $i++) {
            $rand = mt_rand(0, count($possibilities) - 1);
            $string .= $possibilities[$rand];
        }
        return $string;
    }
}
