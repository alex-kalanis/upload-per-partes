<?php

namespace kalanis\UploadPerPartes\ServerData\KeyModifiers;


use kalanis\UploadPerPartes\Interfaces;
use kalanis\UploadPerPartes\ServerData\AModifiers;
use kalanis\UploadPerPartes\Uploader\RandomStrings;


/**
 * Class Random
 * @package kalanis\UploadPerPartes\ServerData\KeyModifiers
 * Connect shared key and local which has been generated by as random string
 */
class Random extends AModifiers implements
    Interfaces\IEncodeForExternalExchange,
    Interfaces\InfoStorage\ForFiles,
    Interfaces\InfoStorage\ForKV,
    Interfaces\InfoStorage\ForStorage,
    Interfaces\InfoStorage\ForVolume,
    Interfaces\IEncodeForInternalStorage
{
    /** @var int */
    protected $keyLength = 64;

    public function getKeyForStorage(string $what): string
    {
        return RandomStrings::generate($this->keyLength);
    }

    public function pack(string $data): string
    {
        return $data;
    }

    public function unpack(string $data): string
    {
        return $data;
    }
}
